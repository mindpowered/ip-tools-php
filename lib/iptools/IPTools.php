<?php
/**
 * Generated by Haxe 4.1.1
 */

namespace iptools;

use \maglev\MagLevString;
use \maglev\MagLevFunction;
use \php\Boot;
use \maglev\MagLevResult;
use \maglev\MagLev;
use \maglev\MagLevError;
use \maglev\MagLevArray;

class IPTools {
	/**
	 * @var MagLev
	 */
	public $maglev;

	/**
	 * @param MagLev $maglev
	 * 
	 * @return void
	 */
	public function __construct ($maglev) {
		#/src/iptools/IPTools.hx:12: characters 3-23
		$this->maglev = $maglev;
		#/src/iptools/IPTools.hx:13: characters 3-22
		$this->registerMyMethods();
	}

	/**
	 * @return void
	 */
	public function registerMyMethods () {
		#/src/iptools/IPTools.hx:17: characters 3-25
		$bus = $this->maglev;
		#/src/iptools/IPTools.hx:19: lines 19-28
		$this->maglev->register("IPTools.SubnetMaskToCIDR", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/iptools/IPTools.hx:20: characters 4-48
			$data = MagLevArray::create();
			#/src/iptools/IPTools.hx:21: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/iptools/IPTools.hx:22: characters 4-66
			$data->push(MagLevString::fromString("IPTools.SubnetMaskToCIDR"));
			#/src/iptools/IPTools.hx:23: characters 4-49
			$data->push(MagLevString::fromString("iptools"));
			#/src/iptools/IPTools.hx:24: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/iptools/IPTools.hx:25: characters 4-222
			$err = MagLevError::create(-20000, "You are trying to use the 'IPTools.SubnetMaskToCIDR' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/iptools/IPTools.hx:26: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/iptools/IPTools.hx:27: characters 4-17
			return $result;
		}));
		#/src/iptools/IPTools.hx:30: lines 30-39
		$this->maglev->register("IPTools.CalcCIDR", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/iptools/IPTools.hx:31: characters 4-48
			$data = MagLevArray::create();
			#/src/iptools/IPTools.hx:32: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/iptools/IPTools.hx:33: characters 4-58
			$data->push(MagLevString::fromString("IPTools.CalcCIDR"));
			#/src/iptools/IPTools.hx:34: characters 4-49
			$data->push(MagLevString::fromString("iptools"));
			#/src/iptools/IPTools.hx:35: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/iptools/IPTools.hx:36: characters 4-214
			$err = MagLevError::create(-20000, "You are trying to use the 'IPTools.CalcCIDR' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/iptools/IPTools.hx:37: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/iptools/IPTools.hx:38: characters 4-17
			return $result;
		}));
		#/src/iptools/IPTools.hx:41: lines 41-50
		$this->maglev->register("IPTools.IPToDecimal", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/iptools/IPTools.hx:42: characters 4-48
			$data = MagLevArray::create();
			#/src/iptools/IPTools.hx:43: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/iptools/IPTools.hx:44: characters 4-61
			$data->push(MagLevString::fromString("IPTools.IPToDecimal"));
			#/src/iptools/IPTools.hx:45: characters 4-49
			$data->push(MagLevString::fromString("iptools"));
			#/src/iptools/IPTools.hx:46: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/iptools/IPTools.hx:47: characters 4-217
			$err = MagLevError::create(-20000, "You are trying to use the 'IPTools.IPToDecimal' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/iptools/IPTools.hx:48: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/iptools/IPTools.hx:49: characters 4-17
			return $result;
		}));
		#/src/iptools/IPTools.hx:52: lines 52-61
		$this->maglev->register("IPTools.IP4FromDecimal", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/iptools/IPTools.hx:53: characters 4-48
			$data = MagLevArray::create();
			#/src/iptools/IPTools.hx:54: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/iptools/IPTools.hx:55: characters 4-64
			$data->push(MagLevString::fromString("IPTools.IP4FromDecimal"));
			#/src/iptools/IPTools.hx:56: characters 4-49
			$data->push(MagLevString::fromString("iptools"));
			#/src/iptools/IPTools.hx:57: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/iptools/IPTools.hx:58: characters 4-220
			$err = MagLevError::create(-20000, "You are trying to use the 'IPTools.IP4FromDecimal' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/iptools/IPTools.hx:59: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/iptools/IPTools.hx:60: characters 4-17
			return $result;
		}));
		#/src/iptools/IPTools.hx:63: lines 63-72
		$this->maglev->register("IPTools.IP6FromDecimal", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/iptools/IPTools.hx:64: characters 4-48
			$data = MagLevArray::create();
			#/src/iptools/IPTools.hx:65: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/iptools/IPTools.hx:66: characters 4-64
			$data->push(MagLevString::fromString("IPTools.IP6FromDecimal"));
			#/src/iptools/IPTools.hx:67: characters 4-49
			$data->push(MagLevString::fromString("iptools"));
			#/src/iptools/IPTools.hx:68: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/iptools/IPTools.hx:69: characters 4-220
			$err = MagLevError::create(-20000, "You are trying to use the 'IPTools.IP6FromDecimal' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/iptools/IPTools.hx:70: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/iptools/IPTools.hx:71: characters 4-17
			return $result;
		}));
		#/src/iptools/IPTools.hx:74: lines 74-83
		$this->maglev->register("IPTools.IPv4ToIPv6", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/iptools/IPTools.hx:75: characters 4-48
			$data = MagLevArray::create();
			#/src/iptools/IPTools.hx:76: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/iptools/IPTools.hx:77: characters 4-60
			$data->push(MagLevString::fromString("IPTools.IPv4ToIPv6"));
			#/src/iptools/IPTools.hx:78: characters 4-49
			$data->push(MagLevString::fromString("iptools"));
			#/src/iptools/IPTools.hx:79: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/iptools/IPTools.hx:80: characters 4-216
			$err = MagLevError::create(-20000, "You are trying to use the 'IPTools.IPv4ToIPv6' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/iptools/IPTools.hx:81: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/iptools/IPTools.hx:82: characters 4-17
			return $result;
		}));
		#/src/iptools/IPTools.hx:85: lines 85-94
		$this->maglev->register("IPTools.ExpandIPv6", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/iptools/IPTools.hx:86: characters 4-48
			$data = MagLevArray::create();
			#/src/iptools/IPTools.hx:87: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/iptools/IPTools.hx:88: characters 4-60
			$data->push(MagLevString::fromString("IPTools.ExpandIPv6"));
			#/src/iptools/IPTools.hx:89: characters 4-49
			$data->push(MagLevString::fromString("iptools"));
			#/src/iptools/IPTools.hx:90: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/iptools/IPTools.hx:91: characters 4-216
			$err = MagLevError::create(-20000, "You are trying to use the 'IPTools.ExpandIPv6' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/iptools/IPTools.hx:92: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/iptools/IPTools.hx:93: characters 4-17
			return $result;
		}));
		#/src/iptools/IPTools.hx:96: lines 96-105
		$this->maglev->register("IPTools.CompressIPv6", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/iptools/IPTools.hx:97: characters 4-48
			$data = MagLevArray::create();
			#/src/iptools/IPTools.hx:98: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/iptools/IPTools.hx:99: characters 4-62
			$data->push(MagLevString::fromString("IPTools.CompressIPv6"));
			#/src/iptools/IPTools.hx:100: characters 4-49
			$data->push(MagLevString::fromString("iptools"));
			#/src/iptools/IPTools.hx:101: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/iptools/IPTools.hx:102: characters 4-218
			$err = MagLevError::create(-20000, "You are trying to use the 'IPTools.CompressIPv6' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/iptools/IPTools.hx:103: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/iptools/IPTools.hx:104: characters 4-17
			return $result;
		}));
	}
}

Boot::registerClass(IPTools::class, 'iptools.IPTools');
